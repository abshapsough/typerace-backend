{"version":3,"sources":["images/btn_google.svg","context.js","components/Menu.js","components/Navbar.js","components/Profile.js","Api.js","utils/history.js","components/DisplayName.js","components/Home.js","socket.js","components/ProgressBar.js","components/RaceRoom.js","components/Login.js","App.js","serviceWorker.js","index.js","proxy.js"],"names":["module","exports","Store","createContext","SimpleMenu","props","React","useState","anchorEl","setAnchorEl","useContext","setUser","user","setRaceURL","handleClose","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","color","style","borderRadius","src","picture","height","width","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","component","Link","to","localStorage","removeItem","getItem","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","setOpenLogin","className","AppBar","position","Toolbar","Typography","variant","Profile","Grid","container","direction","justify","alignItems","item","xs","marginTop","full_name","marginLeft","Paper","marginBottom","email","display_name","statistics","races","wins","Math","round","average_wpm","fastest_wpm","login","firebase","provider","setOpenDialog","auth","signInWithPopup","then","result","a","currentUser","getIdToken","idToken","newUser","additionalUserInfo","isNewUser","fetch","proxy","method","headers","Accept","body","JSON","stringify","res","json","selectionFired","CustomEvent","detail","document","dispatchEvent","setItem","catch","error","console","log","update","authorization","token","message","UpdateRaceData","details","UpdateParagraph","createHistory","require","createBrowserHistory","forceRefresh","DisplayName","displayName","setDisplayName","setError","handleSubmit","setOpen","race_exist","parse","race_uid","race_admin","history","push","Dialog","disableBackdropClick","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","value","onChange","e","target","DialogActions","Home","raceURL","view","setView","link","setLink","useEffect","create","uid","paragraph","word_count","char_count","parsed","queryString","extract","race","Emit","socket","options","emit","ProgressBar","setStart","bgcolor","completed","image","fillerStyles","backgroundColor","textAlign","fontWeight","referrerPolicy","bottom","onLoad","alt","RaceRoom","start","countdown","setCountdown","timer","initial","setTimer","correctWords","setCorrectWords","typedWords","setTypedWords","complete","setComplete","setColor","bgColor","setBgColor","timerInterval","setRaceInterval","WPM","setWPM","raceData","setRaceData","completedRace","setCompletedRace","startedRace","setStartedRace","copy","setCopy","lightColor","setLightColor","raceIndex","setRaceIndex","done","current","coming","paragraphAnimation","setParagraphAnimation","window","addEventListener","performance","navigation","TYPE_RELOAD","on","new_racer","getElementById","onpaste","preventDefault","kick","alert","current_users","raceSetup","current_racers","forEach","racer","index","Date","now","interval","setInterval","difference","second","floor","clearInterval","updates","data","wpm","off","setTimeout","includes","length","innerHTML","rank","indexOf","seconds","startCountdown","new_paragraph","users","progress","key","paddingTop","elevation","List","map","ListItem","ListItemText","primary","ListItemSecondaryAction","Tooltip","IconButton","aria-label","kickPlayer","Container","lineHeight","itemxs","borderLeft","Fragment","light","border","display","borderStlye","padding","outlineColor","autoComplete","autoCorrect","autoCapitalize","spellCheck","slice","location","origin","readOnly","copyText","select","setSelectionRange","execCommand","Login","openLogin","handleLogin","paddingLeft","google_img","io","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","App","openDialog","search","Provider","exact","path","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6070ca76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/btn_google.686f8efa.svg\";","import { createContext } from \"react\";\n\nexport const Store = createContext(null);\n","import React, { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Store } from \"../context\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const { user, setUser, setRaceURL } = useContext(Store);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(localStorage.getItem(\"user\"));\n    localStorage.removeItem(\"typerace.race\");\n    setRaceURL(localStorage.getItem(\"typerace.race\"));\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n        style={{ borderRadius: \"60px\" }}\n      >\n        <img\n          src={props.user.picture}\n          style={{ height: \"45px\", width: \"45px\", borderRadius: \"100px\" }}\n        ></img>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose} component={Link} to=\"/profile\">\n          Profile\n        </MenuItem>\n        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { Store } from \"../context\";\nimport Menu from \"./Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n  const { user, setOpenLogin } = useContext(Store);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link color=\"inherit\" className=\"navbar-link\" to=\"/home\">\n              Typerace\n            </Link>\n          </Typography>\n          {user ? (\n            <Menu user={user}></Menu>\n          ) : (\n            <Button color=\"inherit\" onClick={() => setOpenLogin(true)}>\n              Login\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Store } from \"../context\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Paper } from \"@material-ui/core\";\n\nexport default function Profile(props) {\n  const { user, setUser, setRaceURL } = useContext(Store);\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(localStorage.getItem(\"user\"));\n    localStorage.removeItem(\"typerace.race\");\n    setRaceURL(localStorage.getItem(\"typerace.race\"));\n  };\n  return (\n    <div className=\"profile\">\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        {\" \"}\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <h1>Your Profile</h1>\n        </Grid>\n        <Grid item xs={1} style={{ height: \"100%\" }}>\n          <Button\n            component={Link}\n            to=\"/home\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            className=\"back-button\"\n            style={{ marginTop: \"20px\" }}\n          >\n            Back\n          </Button>\n        </Grid>\n        <Grid item xs={5} style={{ height: \"100%\" }}>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <img\n              src={user.picture}\n              style={{ height: \"150px\", width: \"150px\", borderRadius: \"100px\" }}\n            ></img>\n          </Grid>{\" \"}\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <h2>{user.full_name}</h2>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <h3 style={{ marginLeft: \"20px\" }}>Account details</h3>\n          <Paper variant=\"outlined\" style={{ marginBottom: \"30px\" }}>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <div id=\"list\" style={{ marginTop: \"20px\" }}>\n                <strong>Email:</strong> {user.email}\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <div id=\"list\">\n                <strong>Display name:</strong> {user.display_name}\n              </div>\n            </Grid>\n          </Paper>{\" \"}\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <h3 style={{ marginLeft: \"20px\" }}>Statistics</h3>\n          </Grid>\n          <Paper variant=\"outlined\">\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <div id=\"list\" style={{ marginTop: \"20px\" }}>\n                <strong>Races:</strong> {user.statistics.races}\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <div id=\"list\">\n                <strong>Wins:</strong> {user.statistics.wins}\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <div id=\"list\">\n                <strong>Average WPM:</strong>{\" \"}\n                {Math.round(user.statistics.average_wpm)}\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <div id=\"list\">\n                <strong>Fastest WPM:</strong> {user.statistics.fastest_wpm}\n              </div>\n            </Grid>{\" \"}\n          </Paper>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Button\n              onClick={handleLogout}\n              component={Link}\n              to=\"/home\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"logout-button\"\n              style={{ marginTop: \"20px\" }}\n            >\n              Logout\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import proxy from \"./proxy\";\n\nexport function login(\n  firebase,\n  provider,\n  setUser,\n  setOpenDialog,\n  setOpenLogin\n) {\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(async function (result) {\n      const idToken = await firebase.auth().currentUser.getIdToken(true);\n      const newUser = result.additionalUserInfo.isNewUser;\n      fetch(`${proxy}login`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          idToken,\n          newUser,\n        }),\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          setOpenLogin(false);\n          if (newUser) {\n            res.display_name = res.full_name;\n            setOpenDialog(true);\n          } else {\n            let selectionFired = new CustomEvent(\"login-result\", {\n              detail: { result: true },\n            });\n            document.dispatchEvent(selectionFired);\n          }\n          setUser(res);\n          localStorage.setItem(\"user\", JSON.stringify(res));\n        });\n    })\n    .catch(function (error) {\n      let selectionFired = new CustomEvent(\"login-result\", {\n        detail: { result: false },\n      });\n      document.dispatchEvent(selectionFired);\n      console.log(error);\n    });\n}\n\nexport async function update(user, setUser) {\n  return fetch(`${proxy}update`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      authorization: user.token,\n    },\n    body: JSON.stringify({\n      ...user,\n    }),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((res) => {\n      if (res.message) {\n        setUser(user);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        return true;\n      }\n      return false;\n    });\n}\n\nexport async function UpdateRaceData(details) {\n  return fetch(`${proxy}update-race-data`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      authorization: details.token,\n    },\n    body: JSON.stringify({\n      ...details,\n    }),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport async function create(token) {\n  return fetch(`${proxy}create`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      authorization: token,\n    },\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport async function UpdateParagraph(token) {\n  return fetch(`${proxy}new-paragraph`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      authorization: token,\n    },\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .then((res) => {\n      return res;\n    });\n}\n","const createHistory = require(\"history\").createBrowserHistory;\nexport default createHistory({ forceRefresh: true });\n","import React, { useContext, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Store } from \"../context\";\nimport { update } from \"../Api\";\nimport history from \"../utils/history\";\n\nexport default function DisplayName(props) {\n  const { user, setUser, setRaceURL } = useContext(Store);\n  const [displayName, setDisplayName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async () => {\n    if (displayName) {\n      const updated = await update(\n        { ...user, display_name: displayName },\n        setUser\n      );\n\n      if (updated) {\n        props.setOpen(false);\n        const race_exist = JSON.parse(localStorage.getItem(\"typerace.race\"));\n        if (race_exist && race_exist.race_uid) {\n          setRaceURL({ race_uid: race_exist.race_uid, race_admin: \"\" });\n          history.push(\"/race\");\n        }\n      } else {\n        setError(\"Display name already exists\");\n      }\n    }\n  };\n\n  const handleDisplayName = (e) => {\n    setDisplayName(e.target.value);\n  };\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick={true}\n        open={props.open || false}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Display name</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter a display name to show while you're racing\n          </DialogContentText>\n          <div className=\"error\">{error}</div>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"display-name\"\n            label=\"Display name\"\n            type=\"text\"\n            fullWidth\n            value={displayName}\n            onChange={handleDisplayName}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Store } from \"../context\";\nimport { Link } from \"react-router-dom\";\nimport DisplayName from \"./DisplayName\";\nimport { create } from \"../Api\";\nimport history from \"../utils/history\";\nimport queryString from \"query-string\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\n\nexport default function Home(props) {\n  const { user, setRaceURL, raceURL, setOpenLogin } = useContext(Store);\n  const [view, setView] = useState(\"home\");\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    if (raceURL && raceURL.race_uid && !user) {\n      setOpenLogin(true);\n    }\n  }, []);\n\n  const handleCreate = () => {\n    if (user) {\n      create(user.token).then((res) => {\n        if (res.message) {\n          setRaceURL({\n            race_uid: res.race_uid,\n            race_admin: user.uid,\n            paragraph: {\n              paragraph: res.paragraph,\n              word_count: res.word_count,\n              char_count: res.char_count,\n            },\n          });\n          localStorage.setItem(\n            \"typerace.race\",\n            JSON.stringify({\n              race_uid: res.race_uid,\n              race_admin: user.uid,\n              paragraph: {\n                paragraph: res.paragraph,\n                word_count: res.word_count,\n                char_count: res.char_count,\n              },\n            })\n          );\n          history.push(\"/race\");\n        }\n      });\n    } else {\n      setOpenLogin(true);\n    }\n  };\n\n  const handleLinkChange = (e) => {\n    const { value } = e.target;\n    setLink(value);\n  };\n\n  const handleJoin = () => {\n    if (user) {\n      const parsed = queryString.parse(queryString.extract(link));\n      if (parsed.race) {\n        setRaceURL({ race_uid: parsed.race, race_admin: \"\" });\n        localStorage.setItem(\n          \"typerace.race\",\n          JSON.stringify({ race_uid: parsed.race, race_admin: \"\" })\n        );\n        history.push(\"/race\");\n      }\n    } else {\n      setOpenLogin(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      {view === \"home\" && (\n        <Grid item xs={5}>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ marginTop: \"70px\", marginBottom: \"60px\" }}\n          >\n            <div className=\"page-title\">Welcome to Typerace!</div>{\" \"}\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ marginTop: \"20px\" }}\n          >\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleCreate}\n              className=\"home-button\"\n              style={{\n                marginTop: \"20px\",\n              }}\n            >\n              <FlagIcon style={{ marginRight: \"10px\" }}></FlagIcon>\n              Create race\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ marginTop: \"20px\" }}\n          >\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setView(\"join\")}\n              className=\"home-button\"\n            >\n              <ArrowForwardIcon\n                style={{ marginRight: \"10px\" }}\n              ></ArrowForwardIcon>\n              Join race\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <DisplayName></DisplayName>\n          </Grid>\n          {user && (\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{ marginTop: \"20px\" }}\n            >\n              <Button\n                component={Link}\n                to=\"/profile\"\n                variant=\"outlined\"\n                color=\"primary\"\n                className=\"home-button\"\n              >\n                <AccountBoxIcon\n                  style={{ marginRight: \"10px\" }}\n                ></AccountBoxIcon>\n                Profile\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      )}\n      {view === \"join\" && (\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ marginTop: \"20px\" }}\n          >\n            <TextField\n              id=\"standard-basic\"\n              label=\"Link\"\n              onChange={handleLinkChange}\n              value={link}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ marginTop: \"20px\" }}\n          >\n            <Button variant=\"contained\" color=\"primary\" onClick={handleJoin}>\n              Join\n            </Button>{\" \"}\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{ marginTop: \"20px\" }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => setView(\"home\")}\n              >\n                Cancel\n              </Button>{\" \"}\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n","export function Emit(socket, event, options) {\n  socket.emit(event, options);\n}\n","import React, { useState } from \"react\";\n\nconst ProgressBar = (props) => {\n  const [start, setStart] = useState(false);\n  const { bgcolor, completed, image } = props;\n\n  const containerStyles = {\n    height: 15,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 30,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles} id=\"filler-progress-bar\">\n        <span style={labelStyles}>\n          <img\n            src={image}\n            referrerPolicy=\"no-referrer\"\n            style={{\n              height: \"23px\",\n              width: \"23px\",\n              borderRadius: \"60px\",\n              position: \"relative\",\n              bottom: \"4px\",\n            }}\n            onLoad={() => {\n              setStart(true);\n            }}\n            alt=\"A\"\n          ></img>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Store } from \"../context\";\nimport { Emit } from \"../socket\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport { UpdateRaceData, UpdateParagraph } from \"../Api\";\nimport history from \"../utils/history\";\nimport ProgressBar from \"./ProgressBar\";\n\nexport default function RaceRoom(props) {\n  const { raceURL, user, socket, setRaceURL, setUser } = useContext(Store);\n  const [start, setStart] = useState(false);\n  const [countdown, setCountdown] = useState(4);\n  const [initial] = useState({ timer: 119, countdown: 4 });\n  const [timer, setTimer] = useState(119);\n  const [correctWords, setCorrectWords] = useState(0);\n  const [typedWords, setTypedWords] = useState(\"\");\n  const [complete, setComplete] = useState(false);\n  const [color, setColor] = useState(\"#006400\");\n  const [bgColor, setBgColor] = useState(\"#90EE90\");\n  const [timerInterval, setRaceInterval] = useState(0);\n  const [WPM, setWPM] = useState(0);\n  const [raceData, setRaceData] = useState([]);\n  const [completedRace, setCompletedRace] = useState([]);\n  const [startedRace, setStartedRace] = useState([]);\n  const [copy, setCopy] = useState(\"Copy\");\n  const [lightColor, setLightColor] = useState([\"\", \"\", \"\"]);\n  const [raceIndex, setRaceIndex] = useState(-1);\n  const [paragraphAnimation, setParagraphAnimation] = useState({\n    done: \"\",\n    current: \"\",\n    coming: raceURL.paragraph && raceURL.paragraph.paragraph,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", function (e) {\n      socket.emit(\"remove-player\", {\n        race_uid: raceURL.race_uid,\n        uid: user.uid,\n        ...JSON.parse(localStorage.getItem(\"typerace.race\")),\n      });\n      localStorage.removeItem(\"typerace.race\");\n      return;\n    });\n\n    if (performance.navigation.type === performance.navigation.TYPE_RELOAD) {\n      socket.emit(\"remove-player\", {\n        race_uid: raceURL.race_uid,\n        uid: user.uid,\n        ...JSON.parse(localStorage.getItem(\"typerace.race\")),\n      });\n      localStorage.removeItem(\"typerace.race\");\n      history.push(\"/home\");\n      return;\n    }\n    if (user) {\n      Emit(socket, \"join-race\", {\n        race_admin: raceURL.race_admin,\n        token: user.token,\n        race_uid: raceURL.race_uid,\n        display_name: user.display_name,\n        paragraph: raceURL.paragraph,\n        image: user.picture,\n      });\n\n      socket.on(\"new-user-request\", (new_racer) => {\n        if (raceURL.race_admin === user.uid) {\n          Emit(socket, \"new-user-request-granted\", {\n            ...new_racer,\n            ...JSON.parse(localStorage.getItem(\"typerace.race\")),\n          });\n        }\n      });\n\n      socket.on(\"connectToRoom\", (race) => {\n        setRaceURL({ ...race });\n        localStorage.setItem(\"typerace.race\", JSON.stringify({ ...race }));\n      });\n      const noPaste = document.getElementById(\"race-input\");\n      noPaste.onpaste = (e) => {\n        e.preventDefault();\n        return false;\n      };\n    } else {\n      history.push(\"/home\");\n      return;\n    }\n\n    socket.on(\"remove-player-client\", (details) => {\n      if (details === \"error\" || (details.kick && details.uid === user.uid)) {\n        localStorage.removeItem(\"typerace.race\");\n        history.push(\"/home\");\n        if (details.kick) alert(\"You have been kicked\");\n        return;\n      }\n      let options = {\n        current_users: details.current_users,\n        paragraph: details.paragraph,\n        race_uid: details.race_uid,\n        race_admin: details.race_admin,\n      };\n      setRaceURL(options);\n      localStorage.setItem(\"typerace.race\", JSON.stringify(options));\n    });\n\n    socket.on(\"start-countdown-client\", (raceSetup) => {\n      raceSetup.current_racers.forEach((racer) => {\n        if (racer.display_name === user.display_name) {\n          setRaceIndex(racer.index);\n        }\n      });\n      raceSetup.paragraph &&\n        setRaceURL({\n          ...raceURL,\n          paragraph: raceSetup.paragraph,\n          current_users: raceSetup.current_racers,\n        });\n      setCompletedRace([]);\n      setTimer(initial.timer);\n      setCountdown(initial.countdown);\n      setCorrectWords(0);\n      setTypedWords(\"\");\n      setComplete(false);\n      setWPM(0);\n      setRaceData(raceSetup.current_racers);\n      setStartedRace(\n        JSON.parse(localStorage.getItem(\"typerace.race\")).current_users && [\n          ...JSON.parse(localStorage.getItem(\"typerace.race\")).current_users,\n        ]\n      );\n      let start = Date.now();\n      let interval = setInterval(() => {\n        let current = Date.now();\n        let difference = current - start;\n        let second = Math.floor((difference / 1000) % 60);\n\n        if (countdown - second === 3) setLightColor([\"red\", \"\", \"\"]);\n        if (countdown - second === 2) setLightColor([\"red\", \"yellow\", \"\"]);\n        if (countdown - second === 1) {\n          setStart(true);\n          setLightColor([\"red\", \"yellow\", \"green\"]);\n        }\n        if (countdown - second === 0) {\n          clearInterval(interval);\n        }\n        setCountdown(countdown - second);\n      }, 1000);\n    });\n\n    return () => {\n      socket.emit(\"remove-player\", {\n        race_uid: raceURL.race_uid,\n        uid: user.uid,\n        ...JSON.parse(localStorage.getItem(\"typerace.race\")),\n      });\n      localStorage.removeItem(\"typerace.race\");\n      return;\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"update-client-wpm\", (updates) => {\n      let data = [...raceData];\n      data[updates.index] = {\n        wpm: updates.wpm,\n        correctWords: updates.correctWords,\n        image: updates.image,\n        race_uid: raceURL.race_uid,\n        index: updates.index,\n        display_name: updates.display_name,\n        uid: updates.uid,\n      };\n      setRaceData(data);\n    });\n\n    return () => {\n      socket.off(\"update-client-wpm\");\n    };\n  }, [raceData]);\n\n  useEffect(() => {\n    setParagraphAnimation({\n      done: \"\",\n      current: \"\",\n      coming: raceURL.paragraph && raceURL.paragraph.paragraph,\n    });\n  }, [raceURL.paragraph]);\n\n  useEffect(() => {\n    if (copy === \"Copied!\") {\n      setTimeout(() => {\n        setCopy(\"Copy\");\n      }, 2000);\n    }\n  }, [copy]);\n\n  useEffect(() => {\n    socket.on(\"completed-race-client\", (update) => {\n      if (completedRace.includes(update)) return;\n      setCompletedRace([...completedRace, update]);\n    });\n\n    if (completedRace.length > 0) {\n      completedRace.forEach((racer, index) => {\n        document.getElementById(`rank-${racer}`).innerHTML =\n          \"rank \" + (index + 1);\n      });\n    }\n    if (start && startedRace && startedRace.length === completedRace.length) {\n      (async () => {\n        let statistics = await UpdateRaceData({\n          race_uid: raceURL.race_uid,\n          uid: user.uid,\n          wpm: WPM,\n          token: user.token,\n          rank: completedRace.indexOf(user.display_name) + 1,\n        });\n        setUser({ ...user, statistics: { ...statistics } });\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({ ...user, statistics: { ...statistics } })\n        );\n      })();\n      setStart(false);\n    }\n\n    return () => {\n      socket.off(\"completed-race-client\");\n    };\n  }, [completedRace, startedRace]);\n\n  useEffect(() => {\n    if (start && !complete) {\n      let start = Date.now();\n      setRaceInterval(\n        setInterval(() => {\n          let current = Date.now();\n\n          let difference = current - start;\n          let second = Math.floor((difference / 1000) % 120);\n\n          if (timer - second === 0) {\n            setComplete(true);\n            clearInterval(timerInterval);\n          }\n          setTimer(timer - second);\n        }, 1000)\n      );\n    }\n  }, [start, complete]);\n\n  useEffect(() => {\n    if (complete) {\n      clearInterval(timerInterval);\n      socket.emit(\"completed-race\", {\n        race_uid: raceURL.race_uid,\n        display_name: user.display_name,\n      });\n      let seconds = initial.timer - timer;\n      let wpm = Math.round((correctWords / seconds) * 60);\n      setWPM(wpm);\n\n      socket.emit(\"update-wpm\", {\n        wpm,\n        correctWords,\n        image: user.picture,\n        race_uid: raceURL.race_uid,\n        index: raceIndex,\n        display_name: user.display_name,\n        uid: user.uid,\n      });\n    }\n  }, [complete]);\n\n  useEffect(() => {\n    let seconds = initial.timer - timer;\n    let wpm = Math.round((correctWords / seconds) * 60);\n    setWPM(wpm);\n    socket.emit(\"update-wpm\", {\n      wpm,\n      correctWords,\n      image: user.picture,\n      race_uid: raceURL.race_uid,\n      index: raceIndex,\n      display_name: user.display_name,\n      uid: user.uid,\n    });\n  }, [timer]);\n\n  const startCountdown = async () => {\n    let new_paragraph = null;\n    if (completedRace.length > 0) {\n      new_paragraph = await UpdateParagraph();\n      if (new_paragraph.error) {\n        return;\n      } else {\n        delete new_paragraph[\"message\"];\n      }\n    }\n\n    socket.emit(\"start-countdown\", {\n      race_uid: raceURL.race_uid,\n      users: raceURL.current_users,\n      paragraph: new_paragraph,\n    });\n  };\n\n  const handleText = (e) => {\n    if (!complete && start) {\n      const { value } = e.target;\n      let index = value.length;\n      let correct = raceURL.paragraph.paragraph.slice(0, index);\n\n      if (correct !== value) {\n        setColor(\"red\");\n        setBgColor(\"#FA8072\");\n        setLightColor([\"red\", \"red\", \"red\"]);\n        setTypedWords(value);\n      } else {\n        if (typedWords.length > value.length && color === \"#006400\") return;\n        setParagraphAnimation({\n          done: value,\n          current: raceURL.paragraph.paragraph[index],\n          coming: raceURL.paragraph.paragraph.slice(\n            index + 1,\n            raceURL.paragraph.paragraph.length\n          ),\n        });\n\n        if (\n          value[index - 1] === \" \" &&\n          color === \"#006400\" &&\n          index - 2 >= 0 &&\n          value[index - 2] !== \" \"\n        ) {\n          setCorrectWords(correctWords + 1);\n        }\n        if (value === raceURL.paragraph.paragraph) {\n          setCorrectWords(correctWords + 1);\n          setComplete(true);\n        }\n        setLightColor([\"green\", \"green\", \"green\"]);\n        setBgColor(\"#90EE90\");\n        setColor(\"#006400\");\n        setTypedWords(value);\n      }\n    }\n  };\n\n  const kickPlayer = (racer) => {\n    socket.emit(\"remove-player\", {\n      race_uid: raceURL.race_uid,\n      uid: racer.uid,\n      kick: true,\n      ...JSON.parse(localStorage.getItem(\"typerace.race\")),\n    });\n  };\n\n  const progress = (racer) => {\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        key={racer.display_name}\n      >\n        <Grid item xs={3}>\n          <div style={{ width: \"100%\" }}>{racer.display_name}</div>{\" \"}\n        </Grid>\n        <Grid item xs={7} style={{ paddingTop: \"5px\" }}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            style={{ height: \"20px\" }}\n          >\n            <ProgressBar\n              bgcolor={\"#3f51b5\"}\n              completed={\n                Math.round(\n                  (raceData[racer.index].correctWords /\n                    (raceURL.paragraph && raceURL.paragraph.word_count)) *\n                    100\n                ) || 0\n              }\n              image={raceData[racer.index].image}\n            ></ProgressBar>{\" \"}\n          </Grid>\n        </Grid>\n        <Grid item xs={2}>\n          <div style={{ width: \"100%\", marginLeft: \"10px\" }}>\n            {raceData[racer.index].wpm} wpm{\" \"}\n            <span id={`rank-${racer.display_name}`}></span>{\" \"}\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <div>\n      {user && (\n        <Grid container direction=\"row\" justify=\"center\">\n          <Grid item xs={12}>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              className=\"page-title\"\n              style={{ marginTop: \"30px\" }}\n            >\n              Welcome to the race lobby\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{ marginTop: \"20px\" }}\n            >\n              {start ? (\n                <span style={{ color: \"white\" }}>h</span>\n              ) : raceURL.race_admin === user.uid ? (\n                <div>\n                  You are the race admin. Click on \"Start race\" to begin\n                </div>\n              ) : (\n                <div>Waiting for race admin to start the race</div>\n              )}\n            </Grid>\n          </Grid>\n          <Grid item xs={2}>\n            Racers\n            {raceURL.current_users && (\n              <Paper\n                variant=\"outlined\"\n                elevation={0}\n                style={{ marginTop: \"10px\" }}\n                className=\"race-room-paper\"\n              >\n                <List>\n                  {raceURL.current_users.map((racer) => {\n                    return (\n                      <ListItem key={racer.uid}>\n                        <img\n                          src={racer.image}\n                          style={{\n                            height: \"30px\",\n                            width: \"30px\",\n                            borderRadius: \"100px\",\n                            marginRight: \"4px\",\n                          }}\n                        ></img>\n                        <ListItemText primary={racer.display_name} />\n                        <ListItemSecondaryAction>\n                          {raceURL.race_admin === user.uid &&\n                            user.display_name !== racer.display_name && (\n                              <Tooltip title=\"Kick\">\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  onClick={() => kickPlayer(racer)}\n                                >\n                                  <DeleteIcon />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </Paper>\n            )}\n          </Grid>\n          <Grid item xs={8} style={{ marginTop: \"10px\" }}>\n            <Container>\n              <Paper\n                variant=\"outlined\"\n                elevation={0}\n                style={{ marginTop: \"20px\" }}\n                className=\"race-room-paper\"\n              >\n                <Grid\n                  item\n                  xs={12}\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <div\n                    style={{\n                      width: \"90%\",\n                      margin: \"10px 0px\",\n                      lineHeight: \"30px\",\n                    }}\n                  >\n                    {completedRace.length > 0\n                      ? raceData.map((racer) => {\n                          return progress(racer);\n                        })\n                      : start || countdown <= 2\n                      ? raceData.map((racer) => {\n                          return progress(racer);\n                        })\n                      : raceURL.current_users &&\n                        raceURL.current_users.map((racer) => {\n                          return (\n                            <div key={racer.uid}>\n                              {racer.display_name}{\" \"}\n                              <span id={`rank-${racer.display_name}`}></span>\n                            </div>\n                          );\n                        })}\n                  </div>\n                </Grid>\n              </Paper>\n              <Grid\n                container\n                itemxs={12}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ margin: \"10px 0px\" }}\n              >\n                <div>\n                  <span style={{ marginRight: \"10px\" }}>\n                    Time {\"  \"}\n                    {Math.floor((timer % 3600) / 60)}:\n                    {Math.floor((timer % 3600) % 60) < 10\n                      ? \"0\" + Math.floor((timer % 3600) % 60)\n                      : Math.floor((timer % 3600) % 60)}\n                  </span>\n                  <span\n                    style={{\n                      borderLeft: \"1px solid grey\",\n                      height: \"5px\",\n                      marginRight: \"10px\",\n                    }}\n                  ></span>\n                  <span>\n                    Speed {\"  \"} {WPM || 0} wpm\n                  </span>\n                </div>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ marginTop: \"20px\" }}\n              >\n                <Paper\n                  variant=\"outlined\"\n                  elevation={0}\n                  className=\"race-room-paper\"\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n                  >\n                    <div style={{ width: \"90%\", lineHeight: \"30px\" }}>\n                      <span\n                        style={{\n                          color: \"gray\",\n                          backgroundColor: bgColor,\n                        }}\n                      >\n                        {paragraphAnimation.done}\n                      </span>\n                      <span style={{ color: color }}>\n                        {paragraphAnimation.current &&\n                          paragraphAnimation.current}\n                      </span>\n                      <span>{paragraphAnimation.coming}</span>\n                    </div>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid\n                container\n                itemxs={12}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ margin: \"10px 0px\" }}\n              >\n                <React.Fragment>\n                  {lightColor.map((light, index) => {\n                    return (\n                      <div\n                        key={index}\n                        style={{\n                          width: \"20px\",\n                          height: \"20px\",\n                          border: \"1px solid black\",\n                          borderRadius: \"60px\",\n                          display: \"inline\",\n                          marginRight: \"5px\",\n                          backgroundColor: light,\n                        }}\n                      ></div>\n                    );\n                  })}\n                </React.Fragment>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <input\n                  id=\"race-input\"\n                  style={{\n                    width: \"100%\",\n                    height: \"50px\",\n                    borderRadius: \"4px\",\n                    borderStlye: \"solid\",\n                    padding: \"0px 20px\",\n                    outlineColor: color,\n                  }}\n                  autoComplete=\"off\"\n                  autoCorrect=\"off\"\n                  autoCapitalize=\"off\"\n                  spellCheck=\"false\"\n                  onChange={handleText}\n                  value={typedWords}\n                ></input>\n              </Grid>\n\n              {raceURL.race_admin === user.uid && !start && (\n                <Grid\n                  item\n                  xs={12}\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"flex-end\"\n                  style={{ marginTop: \"20px\" }}\n                >\n                  {raceURL.current_users &&\n                  raceURL.current_users.length === 1 ? (\n                    <span>Waiting for more players to join...</span>\n                  ) : (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      onClick={startCountdown}\n                      className=\"start-race-button\"\n                    >\n                      {completedRace.length > 0 ? (\n                        <span>Start new race</span>\n                      ) : (\n                        <span>Start new race</span>\n                      )}\n                    </Button>\n                  )}\n                </Grid>\n              )}\n            </Container>\n          </Grid>\n          <Grid item xs={2}>\n            <Paper\n              variant=\"outlined\"\n              elevation={0}\n              style={{ marginTop: \"30px\", padding: \"5px\" }}\n              className=\"race-room-paper\"\n            >\n              send the following link to your friends to join the race!{\" \"}\n              <Grid\n                item\n                xs={12}\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <input\n                  id=\"race-link\"\n                  value={`${window.location.origin}/?race=` + raceURL.race_uid}\n                  style={{ marginTop: \"5px\", marginBottom: \"5px\" }}\n                  readOnly={true}\n                ></input>\n                <div>\n                  <Tooltip title={copy}>\n                    <IconButton\n                      aria-label=\"copy\"\n                      onClick={() => {\n                        var copyText = document.getElementById(\"race-link\");\n                        copyText.select();\n                        copyText.setSelectionRange(0, 99999);\n                        document.execCommand(\"copy\");\n                        setCopy(\"Copied!\");\n                      }}\n                    >\n                      <FileCopyIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Store } from \"../context\";\nimport google_img from \"../images/btn_google.svg\";\nimport { login } from \"../Api\";\nimport history from \"../utils/history\";\n\nexport default function Login(props) {\n  const {\n    setUser,\n    setRaceURL,\n    openLogin,\n    setOpenLogin,\n    setOpenDialog,\n  } = useContext(Store);\n\n  const handleLogin = async () => {\n    document.addEventListener(\"login-result\", (e) => {\n      if (e.detail.result) {\n        const race_exist = JSON.parse(localStorage.getItem(\"typerace.race\"));\n        if (race_exist && race_exist.race_uid) {\n          setRaceURL({ race_uid: race_exist.race_uid, race_admin: \"\" });\n          history.push(\"/race\");\n        }\n      }\n    });\n    login(props.firebase, props.provider, setUser, setOpenDialog, setOpenLogin);\n  };\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick={true}\n        open={openLogin || false}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <div style={{ width: \"300px\", height: \"200px\" }}>\n          {\" \"}\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"flex-end\"\n          >\n            <IconButton\n              aria-label=\"close\"\n              onClick={() => setOpenLogin(false)}\n              style={{ padding: \"5px\" }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Grid>\n          <DialogTitle\n            id=\"form-dialog-title\"\n            style={{ padding: \"6px\", paddingLeft: \"12px\" }}\n          >\n            Login\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <Grid\n                item\n                xs={12}\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <button id=\"google-login-button\" onClick={handleLogin}>\n                  <img src={google_img} id=\"google-login-image\" alt=\"G\"></img>\n                  <div id=\"google-login-text\">LOGIN WITH GOOGLE</div>\n                </button>\n              </Grid>\n            </DialogContentText>\n          </DialogContent>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport io from \"socket.io-client\";\nimport { Store } from \"./context\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./components/Profile\";\nimport Home from \"./components/Home\";\nimport Container from \"@material-ui/core/Container\";\nimport \"./App.css\";\nimport queryString from \"query-string\";\nimport RaceRoom from \"./components/RaceRoom\";\nimport history from \"./utils/history\";\nimport proxy from \"./proxy\";\nimport Login from \"./components/Login\";\nimport DisplayName from \"./components/DisplayName\";\n\nconst socket = io(proxy);\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCvTmQCl8kmkDHDtzeZs1WR-tC7oJKeiOY\",\n  authDomain: \"typerace-292d4.firebaseapp.com\",\n  databaseURL: \"https://typerace-292d4.firebaseio.com\",\n  projectId: \"typerace-292d4\",\n  storageBucket: \"typerace-292d4.appspot.com\",\n  messagingSenderId: \"174094638023\",\n  appId: \"1:174094638023:web:5a768e07aa3c3a7872d7e2\",\n  measurementId: \"G-GKP8GJ381V\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport default function App() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\n  const [raceURL, setRaceURL] = useState(\n    JSON.parse(localStorage.getItem(\"typerace.race\"))\n  );\n  const [openLogin, setOpenLogin] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  useEffect(() => {\n    const parsed = queryString.parse(window.location.search);\n    if (parsed.race) {\n      setRaceURL({ race_uid: parsed.race, race_admin: \"\" });\n      localStorage.setItem(\n        \"typerace.race\",\n        JSON.stringify({ race_uid: parsed.race, race_admin: \"\" })\n      );\n      history.push(\"/race\");\n    }\n  }, []);\n\n  return (\n    <Router history={history}>\n      <Store.Provider\n        value={{\n          user,\n          setUser,\n          raceURL,\n          setRaceURL,\n          socket,\n          openLogin,\n          setOpenLogin,\n          openDialog,\n          setOpenDialog,\n        }}\n      >\n        <Navbar></Navbar>\n        {openDialog && (\n          <DisplayName open={openDialog} setOpen={setOpenDialog}></DisplayName>\n        )}\n        {openLogin && <Login provider={provider} firebase={firebase}></Login>}\n        <div id=\"body\">\n          <Container>\n            <Switch>\n              <Route exact path=\"/profile\">\n                {user ? (\n                  <Profile />\n                ) : (\n                  <div>Please login to view your profile</div>\n                )}\n              </Route>\n\n              <Route exact path=\"/race\">\n                {raceURL ? (\n                  <RaceRoom></RaceRoom>\n                ) : (\n                  <div>Please enter a race url</div>\n                )}\n              </Route>\n              <Route path=\"/\">\n                <Home></Home>\n              </Route>\n            </Switch>\n          </Container>\n        </div>\n      </Store.Provider>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const proxy = \"https://radiant-ravine-82260.herokuapp.com/\";\n// const proxy = \"http://localhost:5000/\";\nmodule.exports = proxy;\n"],"sourceRoot":""}